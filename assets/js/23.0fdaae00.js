(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{348:function(t,a,s){"use strict";s.r(a);var n=s(33),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"中间件-middleware"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间件-middleware"}},[t._v("#")]),t._v(" 中间件(Middleware)")]),t._v(" "),s("p",[t._v("有时候, 依赖注入在一些奇怪的地方作用的不是太好(例如 "),s("code",[t._v("Ponyorm")]),t._v(" 就是用类似 "),s("code",[t._v("with orm.session")]),t._v(" 建立连接的),\n我们需要在事务运行前就执行代码, 并且我们还需要在事务运行完毕后做一些清理工作,\n这时候, 我们就可以用到 中间件(Middleware) 特性轻松的解决这个问题.")]),t._v(" "),s("h2",{attrs:{id:"简单的介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单的介绍"}},[t._v("#")]),t._v(" 简单的介绍")]),t._v(" "),s("p",[t._v("在 python 中, 有一个称为 "),s("code",[t._v("with")]),t._v(" 的关键字, 即 上下文管理器(Context Manager),\n可以先执行任意对象内的 "),s("code",[t._v("__enter__")]),t._v(" 方法, 在执行完代码块后又去执行 "),s("code",[t._v("__exit__")]),t._v(" 方法,\n可以说是很方便了, 较之 "),s("code",[t._v("try-finally")]),t._v(" 语法要好用的多.")]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("with")]),t._v(" 也有它的异步版本 "),s("code",[t._v("async with")]),t._v(", 执行的是异步方法 "),s("code",[t._v("__aenter__")]),t._v(" 和 "),s("code",[t._v("__aexit__")]),t._v(",\n与同步方法大同小异.")]),t._v(" "),s("p",[t._v("中间件便是围绕着这个语言特性设计的, 我们同时支持这两种操作方式,\n不需要对其进行二次包装.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果你用过类似 "),s("code",[t._v("with open(...) as file")]),t._v(" 这样的,\n你可能会感到疑惑, 因为中间件特性"),s("strong",[t._v("不能")]),t._v("使用 "),s("code",[t._v("as")]),t._v(" 关键字捕获 "),s("code",[t._v("__enter__")]),t._v(" 的返回值,\n所以如果你有这样的需求, 建议还是在业务代码里包含.")])]),t._v(" "),s("h2",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[t._v("我们需要在 "),s("code",[t._v("receiver")]),t._v(" 里定义参数 "),s("code",[t._v("middlewares")]),t._v(",\n传入一系列带有方法 "),s("code",[t._v("__enter__")]),t._v("(或 "),s("code",[t._v("__aenter__")]),t._v(") 和 "),s("code",[t._v("__exit__")]),t._v("(或 "),s("code",[t._v("__aexit__")]),t._v(") 的对象:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("receiver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" middlewares"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 传入一些带有方法 `__enter__`(或 `__aenter__`) 和 `__exit__`(或 `__aexit__`) 的对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("event_handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("我们建议你使用 Python 标准库 "),s("code",[t._v("contextlib")]),t._v(" 内提供的一些装饰器函数, 帮助你使用中间件特性."),s("br"),t._v("\n我们可以使用 "),s("code",[t._v("contextlib.contextmanager")]),t._v(" 装饰一个同步函数, 使其可以直接使用:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" contextlib "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" contextmanager\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@contextmanager")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在事务代码执行前会执行的部分")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后面可以跟任何值, 本来是拿来给 `with as` 用的, 现在用作用不了, 所以传什么值都无所谓")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在事务代码执行后会执行的部分")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("当然, "),s("code",[t._v("contextlib.contextmanager")]),t._v(" 也有它的异步版本, 即 "),s("code",[t._v("contextlib.asynccontextmanager")]),t._v(",\n用于包装异步函数为上下文管理器:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" contextlib "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" asynccontextmanager\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@asynccontextmanager")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在事务代码执行前会执行的部分")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在事务代码执行后会执行的部分")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("无论是同步版本的 "),s("code",[t._v("middleware1")]),t._v(" 还是异步版本的 "),s("code",[t._v("middleware2")]),t._v(", 中间件特性皆支持, 不需要担心兼容性."),s("br"),t._v("\n无论 "),s("code",[t._v("contextmanager")]),t._v(" 还是 "),s("code",[t._v("asynccontextmanager")]),t._v(", 他们都返回了一个可以为 "),s("code",[t._v("with")]),t._v(" 使用的对象,\n理论上, 一个对象只需要可以为 "),s("code",[t._v("with")]),t._v(" 使用, 就可以用来当中间件使用.")]),t._v(" "),s("h2",{attrs:{id:"设置全局中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置全局中间件"}},[t._v("#")]),t._v(" 设置全局中间件")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Mirai")]),t._v(" 对象实例化时, 我们可以通过传入 "),s("code",[t._v("global_middlewares")]),t._v(" 使"),s("strong",[t._v("所有的")]),t._v("事件监听处理\n(包括 "),s("code",[t._v("exception handler")]),t._v(", 但不包括 "),s("code",[t._v("subroutine")]),t._v(") 都会调用该列表内的上下文管理器:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mirai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" global_middlewares"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    middleware1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    middleware2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);