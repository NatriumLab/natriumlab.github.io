(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{369:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"事件接收器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件接收器"}},[t._v("#")]),t._v(" 事件接收器")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#什么是事件接收器-event-receiver"}},[t._v("什么是事件接收器(Event Receiver)")])]),s("li",[s("a",{attrs:{href:"#注册事件监听"}},[t._v("注册事件监听")]),s("ul",[s("li",[s("a",{attrs:{href:"#事件的多种监听方式"}},[t._v("事件的多种监听方式")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"什么是事件接收器-event-receiver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件接收器-event-receiver"}},[t._v("#")]),t._v(" 什么是事件接收器(Event Receiver)")]),t._v(" "),s("p",[t._v("事件接收器用于接收来自无头客户端的事件, 聚合当前处理的事件信息, 并封装为上下文以供事件运行主体调用")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("此处为高级特性, 若你还没学会之前叙述的各式用法,\n建议你跳过此节, 之后再来学习")])]),t._v(" "),s("h2",{attrs:{id:"注册事件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册事件监听"}},[t._v("#")]),t._v(" 注册事件监听")]),t._v(" "),s("p",[t._v("我们都知道, 当要注册一个事件监听时, 要使用装饰器的工厂方法 "),s("code",[t._v("Mirai.receiver")]),t._v(",\n为注册的事件监听提供事件的基本类型:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("receiver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GroupMessage"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("event_gm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"事件的多种监听方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的多种监听方式"}},[t._v("#")]),t._v(" 事件的多种监听方式")]),t._v(" "),s("p",[t._v("你不仅可以使用字符串表达出你想监听的事件, 还可以用另外两种方式:")]),t._v(" "),s("ul",[s("li",[t._v("传入事件模型, 全部的事件模型在 "),s("code",[t._v("mirai.event.external")]),t._v(" 处被定义, 也可以直接从 "),s("code",[t._v("mirai")]),t._v(" 下导入, 这是推荐的做法.")]),t._v(" "),s("li",[t._v("传入一个 "),s("code",[t._v("Enum Value")]),t._v(", 这意味着你可以通过遍历一个枚举类的方式来批量注册事件监听.")])]),t._v(" "),s("p",[t._v("如果你对光秃秃的字符串感到畏惧, 你可以尝试下使用这两种方式.")])])}),[],!1,null,null,null);a.default=n.exports}}]);